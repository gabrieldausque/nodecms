@using BlackSheep.CMS.Models
@using BlackSheep.Core.Services;

@model BlackSheep.CMS.Models.CMSDocument

@{
    ViewBag.Title = Model?.Title;
    Layout = Model != null && !string.IsNullOrWhiteSpace(Model.Layout)?
        Model.Layout:
        "_Layout_BootStrap";
}

@section Scripts {
    <script src="/cms/js/EditorContextualMenu.js" type="text/javascript"></script>
}

<h2>@ViewBag.Title</h2>

@if (Model != null)
{
    <div class="blacksheep-editor-panel">
        <div class="blacksheep-document-zone">
            <header>
                @if (Model.Headers.Layout == ZoneLayout.Stack)
                {
                    <div class="blacksheep-stack-zone">
                        @foreach (var component in Model.Headers.Content)
                        {
                            <div class="blacksheep-editor-zone">
                                <div class="blacksheep-editor-button"><i class="fas fa-pen"></i></div>
                                @await Component.InvokeAsync(component.BlocType, component.Properties)
                            </div>
                        }
                    </div>
                }
                else
                {
                    Model.Headers.Content.ToList().Sort((a, b) =>
                    {
                        if (a.Row > b.Row)
                            return 1;
                        if (a.Row < b.Row)
                            return -1;
                        if (a.Column > b.Column)
                            return 1;
                        if (a.Column < b.Column)
                            return -1;
                        return 0;
                    });
                    <div class="blacksheep-grid-zone container">
                        @{
                            var rowIndex = 0;
                            var columnIndex = 0;
                        }
                        <div class="row">
                            <div class="col blacksheep-bloc-cell">
                                @foreach (var component in Model.Headers.Content)
                                {
                                    if (component.Row > rowIndex)
                                    {
                                        rowIndex = component.Row;
                                        columnIndex = 0;
                                        @Html.Raw("</div><div class=\"row\">");
                                    } 
                                    else if (component.Column > columnIndex)
                                    {
                                        columnIndex = component.Column;
                                        @Html.Raw("</div><div class=\"col blacksheep-bloc-cell\">");
                                    }
                                    @await Component.InvokeAsync("BlocEditorMenu", new Dictionary<string, object>
                                    {
                                        { "bloc", component }
                                    })
                                    ;
                                    @await Component.InvokeAsync(component.BlocType, new Dictionary<string, object>()
                                    {
                                        { "component", component }
                                    })
                                    @Html.Raw("</div>")
                                }
                            </div>
                        </div>
                    </div>
                }
            </header>
            <main>
                @foreach (var component in Model.Bodies.Content)
                {
                    @await Component.InvokeAsync(component.BlocType, component.Properties)
                }
            </main>
            <footer>
                @foreach (var component in Model.Footers.Content)
                {
                    @await Component.InvokeAsync(component.BlocType, component.Properties)
                }
            </footer>
        </div>
        <div class="blacksheep-editor-sidebar">

        </div>
    </div>
}
else
{
    <h2>No Content</h2>    
}
